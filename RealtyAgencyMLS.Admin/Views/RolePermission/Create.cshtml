@model RoleViewModel

@{
    ViewData["Title"] = "Create Role";
    var controllers = (IList<MvcControllerInfo>)ViewData["Controllers"];
}

<div class="row">
    <div class="col-md-12">
        <div class="card custom-card overflow">
            <div class="content-title">
                <h2>Create Role</h2>
                <div>
                    <a asp-action="Index" class="btn btn-default btn-primary customhref">Back to List</a>
                </div>
            </div>
            <div class="col-md-12">

                <form asp-action="Create" class="form-horizontal">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Name" class="control-label col-md-2"></label>
                        <div class="col-md-4">
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label mb-2">Access List</label>
                        <div class="col-md-9">
                            <ol id="tree">
                                @foreach (var controller in controllers)
                                {
                                    string name;
                                    {
                                        name = controller.DisplayName ?? controller.Name;
                                    }
                                    <li class="controller" data-value="@controller.Name">
                                        @name
                                        <input type="hidden" class="area" value="@controller.AreaName" />

                                        @if (controller.Actions.Any())
                                        {
                                            <ul>
                                                @foreach (var action in controller.Actions)
                                                {
                                                    {
                                                        name = action.DisplayName ?? action.Name;
                                                    }
                                                    <li data-value="@action.Name">@name</li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ol>
                        </div>
                    </div>
                    <div class="form-group pl-3">
                        <input type="submit" value="Create" class="btn btn-default btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
    
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(function () {
            $('#tree').bonsai({
                expandAll: false,
                checkboxes: true,
                createInputs: 'checkbox'
            });

            $('form').submit(function () {
                var i = 0, j = 0;
                $('.controller > input[type="checkbox"]:checked, .controller > input[type="checkbox"]:indeterminate').each(function () {
                    var controller = $(this);
                    if ($(controller).prop('indeterminate')) {
                        $(controller).prop("checked", true);
                    }
                    var controllerName = 'SelectedControllers[' + i + ']';
                    $(controller).prop('name', controllerName + '.Name');

                    var area = $(controller).next().next();
                    $(area).prop('name', controllerName + '.AreaName');

                    $('ul > li > input[type="checkbox"]:checked',
                        $(controller).parent()).each(function () {
                            var action = $(this);
                            var actionName = controllerName + '.Actions[' + j + '].Name';
                            $(action).prop('name', actionName);
                            j++;
                        });
                    j = 0;
                    i++;
                });

                return true;
            });
        });
    </script>
}
